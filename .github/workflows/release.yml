name: release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

env:
  GO_VERSION: "1.20"
  RUST_VERSION: "1.70.0"

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create release
        id: release
        uses: ncipollo/release-action@v1.12.0
        with:
          generateReleaseNotes: true
          makeLatest: true

  build-release:
    runs-on: ${{ matrix.os }}
    needs: [create-release]
    strategy:
      matrix:
        build: [linux-x86_64, macos-x86_64, macos-arm64]
        include:
          - build: linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - build: macos-x86_64
            os: macos-12
            target: x86_64-apple-darwin
          - build: macos-arm64
            os: macos-12
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.target }}

      - name: Rust cargo build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          staging="metafmt-${{ github.ref_name }}-${{ matrix.target }}"
          mkdir "$staging"
          cp "target/${{ matrix.target }}/release/metafmt" "$staging"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
