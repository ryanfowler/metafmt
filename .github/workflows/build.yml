name: Build

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux-x86_64, macos-x86_64]
        include:
          - build: linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - build: macos-x86_64
            os: macos-12
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true

      - name: Go format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go tidy
        run: go mod tidy && git diff --exit-code

      - name: Go mod download
        run: go mod download

      - name: Go mod verify
        run: go mod verify

      - name: Go lint
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1"
          install-go: false

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.70.0
          components: clippy, rustfmt

      - name: Rust cargo format
        run: cargo fmt --all -- --check

      - name: Rust cargo build
        run: cargo build --target ${{ matrix.target }}

      - name: Rust cargo clippy
        run: cargo clippy -- -D warnings

      - name: Rust cargo test
        run: cargo test --target ${{ matrix.target }}

      - name: Run metafmt
        run: cargo run -- -d --hidden
